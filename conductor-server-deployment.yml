apiVersion: v1
kind: Namespace
metadata:
  name: orchestration-layer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: conductor-server-deployment
  namespace: orchestration-layer
  labels:
    app: conductor-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: conductor-server
      type: conductor-server
  template:
    metadata:
      name: conductor-server-pod
      labels:
        app: conductor-server
        type: conductor-server
    spec:
      containers:
        - name: conductor-server
          # image: sidharthsunilkumar/conductor-server-prometheus:v1
          # image: sidharthsunilkumar/conductor-server-v3.4.0:v1
          # image: sidharthsunilkumar/conductor-server-elastic:v4      #in v5 elastic is disabled(just to check); v4 has all req config; v6 elastic search with prometheus and 25 db pools
          image: sidharthsunilkumar/conductor-server-dbpools:v2  #v2 has prometheus enabled
          # image: sidharthsunilkumar/conductor-server-dbpools:v1 # with hikari-25 and tomcat-400
          imagePullPolicy: "Always"
          resources:
            limits:
              cpu: "1.2"
              memory: "800Mi"
            requests:
              cpu: "0.4"
              memory: "300Mi"
          ports:
            - containerPort: 8080
            - containerPort: 80
          env: 
            - name: CONFIG_PROP
              # value: "config-local.properties"
              value: "config-postgres.properties"
            - name: POSTGRES_PASSWORD
              # value: "changeme"
              value: "Dbpass100$"
            - name: POSTGRES_USERNAME
              value: "postgres2"
              # value: "postgres"
            - name: POSTGRES_HOST
              value: "10.190.64.2"
              # value: "conductor.cemxfptfewjg.us-east-1.rds.amazonaws.com"
              # value: "postgres-db-postgresql-headless.postgres"
              value: 
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_DB
              value: "conductor"
            - name: POSTGRES_URL
              value: "jdbc:postgresql://10.190.64.2:5432/conductor" # works in gcloud postgresql
              # value: "jdbc:postgresql://34.93.67.59:5432/conductor"   #works in minikube
              # value: "jdbc:postgresql://postgres-db-postgresql-headless.postgres:5432/conductor"
            # jdbc:postgresql://postgres-db-postgresql-headless.postgres
            # jdbc:postgresql://postgres-db-postgresql-headless.postgres:5432
            # "jdbc:postgresql://postgres-db-postgresql-headless.postgres:5432/conductor"
            # jdbc:postgresql://postgres-db-postgresql
            # jdbc:postgresql://postgres-db-postgresql/conductor
            # jdbc:postgresql://postgres-db-postgresql:5432/conductor
            # jdbc:postgresql:postgres-db-postgresql
            # - name: ELASTICSEARCH_IP
              # value: "es.orchestration-layer"
              # value: "es"
              # value: "es.orchestration-layer.svc.cluster.local"
            - name: ELASTICSEARCH_URL
              value: "http://es:9200"
            # - name: ELASTIC_USER_NAME
            #   value: "elastic"
            # - name: ELASTIC_PASSWORD
            #   value: "changeme"
            # - name: ELASTICSEARCH_VERSION
            #   value: "6"
              # 9200 at my-release-elasticsearch-coordinating-only.default.svc.cluster.local
            

---
apiVersion: v1
kind: Service
metadata: 
  name: conductor-server
  namespace: orchestration-layer
  labels:
    app: conductor-server
    type: conductor-server-service
spec:
  type: LoadBalancer
  ports:
    - targetPort: 8080
      port: 80
  selector:
    app: conductor-server
    type: conductor-server

# ---
# apiVersion: v1
# kind: Service
# metadata: 
#   name: conductor-server1
#   namespace: orchestration-layer
#   labels:
#     app: conductor-server
#     type: conductor-server-service1
# spec:
#   type: NodePort
#   ports:
#     - targetPort: 9090
#       port: 9090
#       nodePort: 31516
#   selector:
#     app: conductor-server
#     type: conductor-server

# ---
# apiVersion: batch/v1
# kind: Job
# metadata:
#   name: workflow-registration
#   namespace: orchestration-layer
# spec:
#   template:
#     spec:
#       containers:
#       - name: workflow-registration
#         image: sebinmaret/conductor-registration:1
#         env: 
#           - name: CONDUCTOR_SERVER_IP
#             value: "conductor-server.orchestration-layer"
#           - name: CONDUCTOR_SERVER_PORT
#             value: "80"
#       restartPolicy: Never
#   backoffLimit: 4